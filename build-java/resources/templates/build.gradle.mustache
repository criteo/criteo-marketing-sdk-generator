buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'idea'
    id 'eclipse'
    {{#sourceFolder}}
    id 'java'
    {{/sourceFolder}}
    id 'maven'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = '{{groupId}}'
version = '{{artifactVersion}}'

repositories {
    jcenter()
}

{{#sourceFolder}}
sourceSets {
    main.java.srcDirs = ['{{sourceFolder}}']
}
{{/sourceFolder}}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

install {
    repositories.mavenInstaller {
        pom.artifactId = '{{artifactId}}'
    }
}

dependencies {
    compile 'io.swagger:swagger-annotations:1.5.21'
    compile 'com.squareup.okhttp3:okhttp:3.13.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.13.1'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'io.gsonfire:gson-fire:1.8.3'
    {{#hasOAuthMethods}}
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: '1.0.1'
    {{/hasOAuthMethods}}
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    {{#joda}}
    compile 'joda-time:joda-time:2.9.9'
    {{/joda}}
    {{#threetenbp}}
    compile 'org.threeten:threetenbp:1.3.5'
    {{/threetenbp}}
    testCompile 'junit:junit:4.12'
    testCompile 'org.mock-server:mockserver-netty:5.5.1'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId '{{groupId}}'
            artifactId '{{artifactId}}'
            version '{{artifactVersion}}'
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username = "criteo-oss"
                password = System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}