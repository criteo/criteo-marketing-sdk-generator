buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:4.1.3"
    }
}

apply plugin: 'java-library'
apply plugin: 'org.openapi.generator'

ext {
    artifactId = "python-client-generator"
    groupId = "com.criteo.mapi"
    version = '1.0.0'
    description = 'Criteo Generator for Python Client'
    sourceCompatibility = '1.8'
    jar.enabled = false
}

def clientOutputDir = "$projectDir/../$rootProject.gereratedClientsDirName/php".toString()
def resourcesDir = "$projectDir/resources".toString()

task cleanPreviousDist(type: Delete) {
    group 'Criteo'
    description 'Clean up client output folder'

    delete clientOutputDir
    followSymlinks = true
}

task copyExamples(type: Copy) {
    group 'Criteo'
    description 'Copy the PHP examples into the client output folder'

    from "$resourcesDir/examples"
    into "$clientOutputDir/examples".toString()
}

task copyLicense(type: Copy) {
    group 'Criteo'
    description 'Copy the license into the client output folder'

    from "$projectDir/../LICENSE"
    into clientOutputDir
    rename 'LICENSE', 'LICENSE.txt'
}

task copyTests(type: Copy) {
    group 'Criteo'
    description 'Copy the PHP tests into the client output folder'

    from "$resourcesDir/tests/"
    into "$clientOutputDir/test/".toString()
}

task removeUnwantedFiles(type: Delete) {
    group 'Criteo'
    description 'Remove files generated by openapi-generator that we don\'t to push'

    delete fileTree(clientOutputDir) {
        include '.openapi-generator-ignore', '.travis.yml', 'git_push.sh'
    }
    followSymlinks = true
}

task generateClient(type: GradleBuild) {
    group 'Criteo'
    description 'Generate the PHP client using openapi-generator and custom templates'

    tasks = ['cleanPreviousDist', 'openApiGenerate', 'copyTests', 'copyExamples', 'copyLicense', 'removeUnwantedFiles']
}

def clientPatch = hasProperty('buildNumber') ? buildNumber : '0'

openApiGenerate {
    generatorName = "php"
    templateDir = "$resourcesDir/templates/".toString()
    inputSpec = rootProject.swaggerURL
    outputDir = clientOutputDir
    removeOperationIdPrefix = true
    generateApiTests = false
    generateModelTests = false
    gitUserId='criteo'
    gitRepoId='criteo-php-marketing-sdk'
    configOptions = [
            packageName            : 'CriteoMarketing',
            invokerPackage         : 'Criteo\\Marketing',
            packageUrl             : 'https://github.com/criteo/criteo-php-marketing-sdk',
            artifactVersion        : "$apiVersion.$clientPatch".toString(),
            hideGenerationTimestamp: 'true'
    ]
}
